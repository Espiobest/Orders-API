name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main  # Run tests on PRs to main
  push:
    branches:
      - main  # Deploy only on push to main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests
        run: pytest tests/

  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/fastapi-app:latest .

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/fastapi-app:latest

  deploy:
      name: Deploy to EC2
      runs-on: ubuntu-latest
      needs: build
      steps:
        - name: Checkout Code
          uses: actions/checkout@v3

        - name: Set up SSH Connection
          run: |
            mkdir -p ~/.ssh
            echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
            ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

        - name: Deploy on EC2
          run: |
            ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
              docker pull ${{ secrets.DOCKERHUB_USERNAME }}/fastapi-app:latest
              docker stop fastapi-app || true
              docker rm fastapi-app || true
              docker run -d -p 8000:8000 --name fastapi-app ${{ secrets.DOCKERHUB_USERNAME }}/fastapi-app:latest
            EOF
