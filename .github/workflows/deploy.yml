name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main  # Run tests on PRs to main
  push:
    branches:
      - main  # Deploy only on push to main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests
        run: pytest tests/

  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/fastapi-app:latest .

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/fastapi-app:latest

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'  # only run on merge to main
    steps:
      - name: SSH into EC2 and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            # Pull the latest FastAPI app image
            docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" -p "${{ secrets.DOCKERHUB_PASSWORD }}"
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/fastapi-app:latest
            
            # Stop and remove the old FastAPI container (if exists)
            docker stop fastapi-app || true
            docker rm fastapi-app || true
            
            # Stop and remove the old PostgreSQL container (if needed)
            docker stop postgresql || true
            docker rm postgresql || true
            
            # Start PostgreSQL container (named 'postgresql')
            docker run -d -p 5432:5432 --name postgresql \
              -e POSTGRES_USER=${{ secrets.DB_USER }} \
              -e POSTGRES_PASSWORD=${{ secrets.DB_PASSWORD }} \
              -e POSTGRES_DB=trades \
              postgres:latest
            
            # Start FastAPI app and link it to PostgreSQL
            docker run -d -p 8080:8080 --name fastapi-app \
              --env DB_URL=postgresql://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@postgresql/trades \
              --network=host \
              ${{ secrets.DOCKERHUB_USERNAME }}/fastapi-app:latest
